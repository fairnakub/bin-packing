"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/stringToColor.js":
/*!********************************!*\
  !*** ./utils/stringToColor.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nfunction stringToColor(str) {\n  var seed = Math.floor(Math.random() * 16777215).toString(16);\n  var hash = parseInt(seed, 16);\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  var color = \"#\";\n\n  for (var _i = 0; _i < 3; _i++) {\n    var value = hash >> _i * 8 & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  } // Calculate the luminance of the color\n\n\n  var r = parseInt(color.slice(1, 3), 16);\n  var g = parseInt(color.slice(3, 5), 16);\n  var b = parseInt(color.slice(5), 16);\n  var luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255; // If the color is too light, make it darker\n\n  if (luminance > 0.7) {\n    var factor = 0.5;\n    var newColor = color.replace(/^#(\\w\\w)(\\w\\w)(\\w\\w)$/, function (match, r, g, b) {\n      var newR = Math.max(0, parseInt(r, 16) * factor);\n      var newG = Math.max(0, parseInt(g, 16) * factor);\n      var newB = Math.max(0, parseInt(b, 16) * factor);\n      return \"#\".concat(newR.toString(16)).concat(newG.toString(16)).concat(newB.toString(16));\n    });\n    return newColor;\n  } // If the color is too dark, make it lighter\n\n\n  if (luminance < 0.3) {\n    var _factor = 1.5;\n\n    var _newColor = color.replace(/^#(\\w\\w)(\\w\\w)(\\w\\w)$/, function (match, r, g, b) {\n      var newR = Math.min(255, parseInt(r, 16) * _factor);\n      var newG = Math.min(255, parseInt(g, 16) * _factor);\n      var newB = Math.min(255, parseInt(b, 16) * _factor);\n      return \"#\".concat(newR.toString(16)).concat(newG.toString(16)).concat(newB.toString(16));\n    });\n\n    return _newColor;\n  }\n\n  return color;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stringToColor);\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQWY7O0lBQ0EsSUFBTUMsU0FBUSxHQUFHVCxLQUFLLENBQUNVLE9BQU4sQ0FDZix1QkFEZSxFQUVmLFVBQUNDLEtBQUQsRUFBUVIsQ0FBUixFQUFXRSxDQUFYLEVBQWNDLENBQWQsRUFBb0I7TUFDbEIsSUFBTU0sSUFBSSxHQUFHckIsSUFBSSxDQUFDeUIsR0FBTCxDQUFTLEdBQVQsRUFBY3BCLFFBQVEsQ0FBQ08sQ0FBRCxFQUFJLEVBQUosQ0FBUixHQUFrQkssT0FBaEMsQ0FBYjtNQUNBLElBQU1NLElBQUksR0FBR3ZCLElBQUksQ0FBQ3lCLEdBQUwsQ0FBUyxHQUFULEVBQWNwQixRQUFRLENBQUNTLENBQUQsRUFBSSxFQUFKLENBQVIsR0FBa0JHLE9BQWhDLENBQWI7TUFDQSxJQUFNTyxJQUFJLEdBQUd4QixJQUFJLENBQUN5QixHQUFMLENBQVMsR0FBVCxFQUFjcEIsUUFBUSxDQUFDVSxDQUFELEVBQUksRUFBSixDQUFSLEdBQWtCRSxPQUFoQyxDQUFiO01BQ0Esa0JBQVdJLElBQUksQ0FBQ2xCLFFBQUwsQ0FBYyxFQUFkLENBQVgsU0FBK0JvQixJQUFJLENBQUNwQixRQUFMLENBQWMsRUFBZCxDQUEvQixTQUFtRHFCLElBQUksQ0FBQ3JCLFFBQUwsQ0FBYyxFQUFkLENBQW5EO0lBQ0QsQ0FQYyxDQUFqQjs7SUFTQSxPQUFPZSxTQUFQO0VBQ0Q7O0VBRUQsT0FBT1QsS0FBUDtBQUNEOztBQUVELCtEQUFlWixhQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3N0cmluZ1RvQ29sb3IuanM/YmNkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzdHJpbmdUb0NvbG9yKHN0cikge1xuICBjb25zdCBzZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTY3NzcyMTUpLnRvU3RyaW5nKDE2KTtcbiAgbGV0IGhhc2ggPSBwYXJzZUludChzZWVkLCAxNik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgaGFzaCA9IHN0ci5jaGFyQ29kZUF0KGkpICsgKChoYXNoIDw8IDUpIC0gaGFzaCk7XG4gIH1cbiAgbGV0IGNvbG9yID0gXCIjXCI7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgbGV0IHZhbHVlID0gKGhhc2ggPj4gKGkgKiA4KSkgJiAweGZmO1xuICAgIGNvbG9yICs9IChcIjAwXCIgKyB2YWx1ZS50b1N0cmluZygxNikpLnN1YnN0cigtMik7XG4gIH1cblxuICAvLyBDYWxjdWxhdGUgdGhlIGx1bWluYW5jZSBvZiB0aGUgY29sb3JcbiAgY29uc3QgciA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDEsIDMpLCAxNik7XG4gIGNvbnN0IGcgPSBwYXJzZUludChjb2xvci5zbGljZSgzLCA1KSwgMTYpO1xuICBjb25zdCBiID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNSksIDE2KTtcbiAgY29uc3QgbHVtaW5hbmNlID0gKDAuMjk5ICogciArIDAuNTg3ICogZyArIDAuMTE0ICogYikgLyAyNTU7XG5cbiAgLy8gSWYgdGhlIGNvbG9yIGlzIHRvbyBsaWdodCwgbWFrZSBpdCBkYXJrZXJcbiAgaWYgKGx1bWluYW5jZSA+IDAuNykge1xuICAgIGNvbnN0IGZhY3RvciA9IDAuNTtcbiAgICBjb25zdCBuZXdDb2xvciA9IGNvbG9yLnJlcGxhY2UoXG4gICAgICAvXiMoXFx3XFx3KShcXHdcXHcpKFxcd1xcdykkLyxcbiAgICAgIChtYXRjaCwgciwgZywgYikgPT4ge1xuICAgICAgICBjb25zdCBuZXdSID0gTWF0aC5tYXgoMCwgcGFyc2VJbnQociwgMTYpICogZmFjdG9yKTtcbiAgICAgICAgY29uc3QgbmV3RyA9IE1hdGgubWF4KDAsIHBhcnNlSW50KGcsIDE2KSAqIGZhY3Rvcik7XG4gICAgICAgIGNvbnN0IG5ld0IgPSBNYXRoLm1heCgwLCBwYXJzZUludChiLCAxNikgKiBmYWN0b3IpO1xuICAgICAgICByZXR1cm4gYCMke25ld1IudG9TdHJpbmcoMTYpfSR7bmV3Ry50b1N0cmluZygxNil9JHtuZXdCLnRvU3RyaW5nKDE2KX1gO1xuICAgICAgfVxuICAgICk7XG4gICAgcmV0dXJuIG5ld0NvbG9yO1xuICB9XG5cbiAgLy8gSWYgdGhlIGNvbG9yIGlzIHRvbyBkYXJrLCBtYWtlIGl0IGxpZ2h0ZXJcbiAgaWYgKGx1bWluYW5jZSA8IDAuMykge1xuICAgIGNvbnN0IGZhY3RvciA9IDEuNTtcbiAgICBjb25zdCBuZXdDb2xvciA9IGNvbG9yLnJlcGxhY2UoXG4gICAgICAvXiMoXFx3XFx3KShcXHdcXHcpKFxcd1xcdykkLyxcbiAgICAgIChtYXRjaCwgciwgZywgYikgPT4ge1xuICAgICAgICBjb25zdCBuZXdSID0gTWF0aC5taW4oMjU1LCBwYXJzZUludChyLCAxNikgKiBmYWN0b3IpO1xuICAgICAgICBjb25zdCBuZXdHID0gTWF0aC5taW4oMjU1LCBwYXJzZUludChnLCAxNikgKiBmYWN0b3IpO1xuICAgICAgICBjb25zdCBuZXdCID0gTWF0aC5taW4oMjU1LCBwYXJzZUludChiLCAxNikgKiBmYWN0b3IpO1xuICAgICAgICByZXR1cm4gYCMke25ld1IudG9TdHJpbmcoMTYpfSR7bmV3Ry50b1N0cmluZygxNil9JHtuZXdCLnRvU3RyaW5nKDE2KX1gO1xuICAgICAgfVxuICAgICk7XG4gICAgcmV0dXJuIG5ld0NvbG9yO1xuICB9XG5cbiAgcmV0dXJuIGNvbG9yO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdUb0NvbG9yO1xuIl0sIm5hbWVzIjpbInN0cmluZ1RvQ29sb3IiLCJzdHIiLCJzZWVkIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJoYXNoIiwicGFyc2VJbnQiLCJpIiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsImNvbG9yIiwidmFsdWUiLCJzdWJzdHIiLCJyIiwic2xpY2UiLCJnIiwiYiIsImx1bWluYW5jZSIsImZhY3RvciIsIm5ld0NvbG9yIiwicmVwbGFjZSIsIm1hdGNoIiwibmV3UiIsIm1heCIsIm5ld0ciLCJuZXdCIiwibWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/stringToColor.js\n"));

/***/ })

});