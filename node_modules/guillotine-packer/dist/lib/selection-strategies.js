"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var SelectionStrategy;
(function (SelectionStrategy) {
    SelectionStrategy[SelectionStrategy["BEST_SHORT_SIDE_FIT"] = 0] = "BEST_SHORT_SIDE_FIT";
    SelectionStrategy[SelectionStrategy["BEST_LONG_SIDE_FIT"] = 1] = "BEST_LONG_SIDE_FIT";
    SelectionStrategy[SelectionStrategy["BEST_AREA_FIT"] = 2] = "BEST_AREA_FIT";
})(SelectionStrategy = exports.SelectionStrategy || (exports.SelectionStrategy = {}));
var SelectionImplementation = /** @class */ (function () {
    function SelectionImplementation() {
    }
    SelectionImplementation.prototype.select = function (freeRectangles, itemToPlace) {
        var _this = this;
        var bestRect = freeRectangles
            .filter(function (freeRect) {
            return freeRect.width - itemToPlace.width >= 0 && freeRect.height - itemToPlace.height >= 0;
        })
            .map(function (r) { return ({ rectangle: r, sortValue: _this.generateSortValue(r, itemToPlace) }); })
            .sort(function (a, b) { return (a.sortValue > b.sortValue ? 1 : -1); })[0];
        return bestRect ? bestRect.rectangle : null;
    };
    return SelectionImplementation;
}());
var BestShortSideFit = /** @class */ (function (_super) {
    __extends(BestShortSideFit, _super);
    function BestShortSideFit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BestShortSideFit.prototype.generateSortValue = function (freeRectangle, itemToPlace) {
        var width = itemToPlace.width, height = itemToPlace.height;
        return Math.min(freeRectangle.width - width, freeRectangle.height - height);
    };
    return BestShortSideFit;
}(SelectionImplementation));
var BestLongSideFit = /** @class */ (function (_super) {
    __extends(BestLongSideFit, _super);
    function BestLongSideFit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BestLongSideFit.prototype.generateSortValue = function (freeRectangle, itemToPlace) {
        var width = itemToPlace.width, height = itemToPlace.height;
        return Math.max(freeRectangle.width - width, freeRectangle.height - height);
    };
    return BestLongSideFit;
}(SelectionImplementation));
var BestAreaFit = /** @class */ (function (_super) {
    __extends(BestAreaFit, _super);
    function BestAreaFit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BestAreaFit.prototype.generateSortValue = function (freeRectangle) {
        return freeRectangle.width * freeRectangle.height;
    };
    return BestAreaFit;
}(SelectionImplementation));
function GetSelectionImplementation(strategy) {
    switch (strategy) {
        case SelectionStrategy.BEST_AREA_FIT:
            return new BestAreaFit();
        case SelectionStrategy.BEST_LONG_SIDE_FIT:
            return new BestLongSideFit();
        case SelectionStrategy.BEST_SHORT_SIDE_FIT:
            return new BestShortSideFit();
    }
}
exports.GetSelectionImplementation = GetSelectionImplementation;
//# sourceMappingURL=selection-strategies.js.map